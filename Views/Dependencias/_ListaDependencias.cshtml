<div class="row">
    <div class="col-12 mb-4 px-4 rounded gridCustom">
        @(
            Html.Kendo().Grid<GuanajuatoAdminUsuarios.Models.DependenciasModel>()
            .Name("gridCatDependencias")
                    .Columns(columns =>
                    {
                        columns.Bound(c => c.IdDependencia).Width(20).Title("Id");
                        columns.Bound(c => c.NombreDependencia).Width(100);
                        columns.Bound(c => c.estatusDesc).Title("Estatus").Width(50);
                        //columns.Template(c => { }).ClientTemplate("#=calculateField(data)#");
                        columns.Command(c => c.Custom("Editar").Click("getId")).Width(80);
                //columns.Command(c => c.Custom("Eliminar").Click("eliminar")).Width(80);

                //columns.Command(c => c.Custom("Delete").Click("redirectDelete")).Width(180);


            }).HtmlAttributes(new { style = "height:550px" })
            .Sortable()
            .Groupable()
            .Scrollable()
            .Pageable()
            .DataSource(dataSource => dataSource
            .Ajax()
            .Read(read => read.Action("GetDeps", "Dependencias"))
            .PageSize(5).Model(model => model.Id(p => p.IdDependencia))
            )
            .ToolBar(t => t.Search().Text("Buscar..."))
            .Search(s =>
            {
                s.Field(c => c.NombreDependencia);
            })

            .Selectable(selectable => selectable.Mode(GridSelectionMode.Single)
            .Type(GridSelectionType.Row)
            )



            )

        @(Html.Kendo().Tooltip()
            .For("#grid")
            .Filter("th")
            .Position(TooltipPosition.Top)
            .ContentHandler("tooltipContent")
            )


    </div>
</div>

<script>
    function getId(e) {
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        console.log(dataItem);

        var IdDependencia = dataItem.IdDependencia;
        console.log(IdDependencia);
        showLoading();
        $.ajax({
            url: '@Url.Action("EditarParcial", "Dependencias")', 
            type: 'POST', 
            data: { IdDependencia: IdDependencia }, 
            success: function (result) {
                $('#ModalBodyCreate').html(result);
                $('#addDependencia').modal('show');
                hideLoading();
            }, error: function () {
                sitteg_warning("Ocurrio un error al procesar su solicitud.");
                hideLoading();
            }
        })
    }

    function eliminar(e) {
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var IdDependencia = dataItem.IdDependencia;
        console.log(IdDependencia);
        showLoading();
        $.ajax({
            url: '@Url.Action("EliminarParcial", "Dependencias")',
            type: 'POST', 
            data: { IdDependencia: IdDependencia }, 
            success: function (result) {
                $('#ModalBodyCreate').html(result);
                $('#addDependencia').modal('show');
                hideLoading();
            }, error: function () {
                sitteg_warning("Ocurrio un error al procesar su solicitud.");
                hideLoading();
            }
        })
    }

    function tooltipContent(e) {
        var titulo = e.target.context.dataset.title;
        return titulo;
    }

    function calculateField(data) { 

        let respuesta = data.Estatus == 1 ? "Activo" : "Inactivo";
        return respuesta;
    }
</script>