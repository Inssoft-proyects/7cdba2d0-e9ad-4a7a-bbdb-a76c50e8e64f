<div class="row">
    <div class="col-12 mb-4 px-4 rounded gridCustom">

        @(
            Html.Kendo().Grid<GuanajuatoAdminUsuarios.Models.BusquedaAccidentesModel>()
                        .Name("gridBusquedaAccidentes")
                        .Columns(columns =>
                        {
                            columns.Bound(c => c.IdAccidente).Title("Número").Width(60);
                            columns.Bound(c => c.numeroReporte).Title("Folio").Width(100);
                            columns.Bound(c => c.fecha).Title("Fecha").ClientTemplate("#= new Date(fecha).toLocaleDateString('en-GB') #").Width(100);
                            columns.Bound(c => c.hora).Title("Hora").Width(70);
                            columns.Bound(c => c.municipio).Title("Municipio").Width(100);
                            columns.Bound(c => c.carretera).Title("Carretera").Width(100);
                            columns.Bound(c => c.tramo).Title("Tramo").Width(100);
                            columns.Bound(c => c.estatusReporte).Title("Estatus").Width(100);
                            columns.Bound(p => p.IdAccidente).ClientTemplate(
                            "<button onclick=\"downLoadPdf('#= IdAccidente #')\" class='w-100 btn'><h6 class='m-0 colorPrimary'><i class='h5 icon-pdf me-2'></i><b>Descargar</b></h6></button>"
                            ).Title("Exportar").Sortable(false).Width(90);
                            columns.Bound(p => p.IdAccidente).ClientTemplate(
                            "<button onclick=\"editarAccidente('#= IdAccidente #')\" class='w-100 btn'><h6 class='m-0 colorPrimary'><i class='icon-edit me-2'></i><b>Editar</b></h6></button>"
                            ).Title("Editar").Sortable(false).Width(90);
               /* columns.Bound(p => p.IdAccidente).ClientTemplate(
                "<button onclick=\"consultarAccidente('#= IdAccidente #')\" class='w-100 btn'><h6 class='m-0 colorPrimary'><i class='icon-edit me-2'></i><b>Consultar</b></h6></button>"
                ).Title("Consultar").Sortable(false).Width(90);*/

            }).HtmlAttributes(new { style = "height:550px" })
            .Pageable(pager => pager.AlwaysVisible(true).PageSizes(new int[] { 5, 10, 20, 100 }).Position(GridPagerPosition.Top))
            .Sortable()
            .Scrollable(scr => scr.Height(350))
            .DataSource(dataSource => dataSource
            .Ajax()
            //.Read(read => read.Action("GetAllAccidentes", "BusquedaAccidentes"))
            .ServerOperation(false)
            )
            )
    </div>
</div>

<div id="pdfDetallado">

</div>



<script>
    async function printHTML() {
        const element = document.getElementById("accidenteDetallado");

        var opt = {
            margin: [0, -0.3, 0, 0],
            filename: 'myfile.pdf',
            image: { type: 'jpeg', quality: 0.98},
            html2canvas: { scale: 2 },
            jsPDF: { unit: 'in', format: 'legal', orientation: 'portrait' }
            //pagebreak: { mode: ['avoid-all', 'css', 'legacy'] }
            //pagebreak: { mode: ['avoid-all', 'css', 'legacy'], before: '#divI2' }

        };
        let worker = await html2pdf().set(opt).from(element).toPdf().output('blob').then((data) => {
            console.log(data)
            let fileURL = URL.createObjectURL(data);
            window.open(fileURL);
        })
    }

    function downLoadPdf(Id) {
        $.ajax({
            url: '/PDFGenerator/AccidentesDetallado',
            type: 'GET',
            data: { idAccidente: Id },
            success: function (result) {
                var opt = {
                    margin: [-9.2, -0.3, 0, 0],
                    filename: 'myfile.pdf',
                    image: { type: 'jpeg', quality: 5.0 },
                    html2canvas: { scale: 1},
                    jsPDF: { unit: 'in', format: 'legal', orientation: 'portrait' },
                    pagebreak: { mode: ['avoid-all', 'css', 'legacy'] }
                    //pagebreak: { mode: ['avoid-all', 'css', 'legacy'], before: '.avoidThisRow' }

                };
                html2pdf().set(opt).from(result).save();

                //html2pdf().from(element).save();

                //$("#pdfDetallado").html(result);
                //$("#pdfDetallado").hide();
                //printHTML();

            },

        });
    }
    function editarAccidente(idAccidente) {
        $.ajax({
            url: '/CapturaAccidentes/SetLastInsertedIdEdit',
            type: 'POST',
            data: {idAccidente : idAccidente},
            success: function (result) {
             
                window.location.href = '/CapturaAccidentes/CapturaAaccidente/?showE=true'

            },

        });
    }

    function consultarAccidente(idAccidente) {
        $.ajax({
            url: '/CapturaAccidentes/ConsultaAccidente',
            type: 'POST',
            data: { idAccidente: idAccidente },
            success: function (result) {

                window.location.href = '/CapturaAccidentes/CapturaAaccidente?modoSoloLectura=true';
            },

        });
    }
    
</script>
