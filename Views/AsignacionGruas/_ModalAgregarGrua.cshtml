@model GuanajuatoAdminUsuarios.Models.SeleccionGruaModel
<script>
    function validacionHoraFinal(){
    var fechaSeleccionadaString = $("#fechaFinalInsert").val();
    var horaSeleccionada = $("#horaTerminoInsert").val();

        var fechaActual = new Date();
        var fechaSeleccionada = kendo.parseDate(fechaSeleccionadaString, "dd/MM/yyyy");

        var horaMaxima = fechaActual.getHours().toString().padStart(2, '0') + ':' + fechaActual.getMinutes().toString().padStart(2, '0');
        var horaActual = kendo.parseDate(horaMaxima, "HH:mm");

        console.log('Fecha seleccionada (string):', fechaSeleccionadaString);
        console.log('Hora seleccionada (string):', horaSeleccionada);
        console.log('Fecha actual:', fechaActual);
        console.log('Fecha seleccionada (objeto):', fechaSeleccionada);
        console.log('Hora máxima permitida:', horaMaxima);
        console.log('Hora actual (objeto):', horaActual);

        if (fechaSeleccionada && horaSeleccionada) {
            var fechaSeleccionadaSinHora = new Date(fechaSeleccionada);
            fechaSeleccionadaSinHora.setHours(0, 0, 0, 0);

            if (fechaSeleccionadaSinHora.getTime() === fechaActual.setHours(0, 0, 0, 0)) {
                console.log('Estableciendo límite máximo de hora:', horaMaxima);
                $("#horaTerminoInsert").data("kendoTimePicker").max(horaMaxima);
            } else {
                console.log('Removiendo límite máximo de hora.');
                var horaLejana = "23:59";
                $("#horaTerminoInsert").data("kendoTimePicker").max(horaLejana);
            }

            if (fechaSeleccionadaSinHora.getTime() === fechaActual.setHours(0, 0, 0, 0) && kendo.parseDate(horaSeleccionada, "HH:mm") > horaActual) {
                console.log('Ajustando hora seleccionada a la hora actual:', horaActual);
                $("#horaTerminoInsert").data("kendoTimePicker").value(horaActual);
            }
        } else {
            console.log('Fecha o hora no seleccionada.');
            var horaLejana = "23:59";
            $("#horaTerminoInsert").data("kendoTimePicker").max(horaLejana);
        }
    }
        function validacionHoraInicio(){
    var fechaSeleccionadaString = $("#fechaInicioInsert").val();
    var horaSeleccionada = $("#horaInicioInsert").val();

        var fechaActual = new Date();
        var fechaSeleccionada = kendo.parseDate(fechaSeleccionadaString, "dd/MM/yyyy");

        var horaMaxima = fechaActual.getHours().toString().padStart(2, '0') + ':' + fechaActual.getMinutes().toString().padStart(2, '0');
        var horaActual = kendo.parseDate(horaMaxima, "HH:mm");

        console.log('Fecha seleccionada (string):', fechaSeleccionadaString);
        console.log('Hora seleccionada (string):', horaSeleccionada);
        console.log('Fecha actual:', fechaActual);
        console.log('Fecha seleccionada (objeto):', fechaSeleccionada);
        console.log('Hora máxima permitida:', horaMaxima);
        console.log('Hora actual (objeto):', horaActual);

        if (fechaSeleccionada && horaSeleccionada) {
            var fechaSeleccionadaSinHora = new Date(fechaSeleccionada);
            fechaSeleccionadaSinHora.setHours(0, 0, 0, 0);

            if (fechaSeleccionadaSinHora.getTime() === fechaActual.setHours(0, 0, 0, 0)) {
                console.log('Estableciendo límite máximo de hora:', horaMaxima);
                $("#horaInicioInsert").data("kendoTimePicker").max(horaMaxima);
            } else {
                console.log('Removiendo límite máximo de hora.');
                var horaLejana = "23:59";
                $("#horaInicioInsert").data("kendoTimePicker").max(horaLejana);
            }

            if (fechaSeleccionadaSinHora.getTime() === fechaActual.setHours(0, 0, 0, 0) && kendo.parseDate(horaSeleccionada, "HH:mm") > horaActual) {
                console.log('Ajustando hora seleccionada a la hora actual:', horaActual);
                $("#horaInicioInsert").data("kendoTimePicker").value(horaActual);
            }
        } else {
            console.log('Fecha o hora no seleccionada.');
            var horaLejana = "23:59";
            $("#horaInicioInsert").data("kendoTimePicker").max(horaLejana);
        }
    }
    function validacionHoraArribo(){
    var fechaSeleccionadaString = $("#fechaArriboInsert").val();
    var horaSeleccionada = $("#horaArriboInsert").val();

    var fechaActual = new Date();
    var fechaSeleccionada = kendo.parseDate(fechaSeleccionadaString, "dd/MM/yyyy");

    var horaMaxima = fechaActual.getHours().toString().padStart(2, '0') + ':' + fechaActual.getMinutes().toString().padStart(2, '0');
    var horaActual = kendo.parseDate(horaMaxima, "HH:mm");

    console.log('Fecha seleccionada (string):', fechaSeleccionadaString);
    console.log('Hora seleccionada (string):', horaSeleccionada);
    console.log('Fecha actual:', fechaActual);
    console.log('Fecha seleccionada (objeto):', fechaSeleccionada);
    console.log('Hora máxima permitida:', horaMaxima);
    console.log('Hora actual (objeto):', horaActual);

    if (fechaSeleccionada && horaSeleccionada) {
        var fechaSeleccionadaSinHora = new Date(fechaSeleccionada);
        fechaSeleccionadaSinHora.setHours(0, 0, 0, 0);

        if (fechaSeleccionadaSinHora.getTime() === fechaActual.setHours(0, 0, 0, 0)) {
            console.log('Estableciendo límite máximo de hora:', horaMaxima);
            $("#horaArriboInsert").data("kendoTimePicker").max(horaMaxima);
        } else {
            console.log('Removiendo límite máximo de hora.');
            var horaLejana = "23:59";
            $("#horaArriboInsert").data("kendoTimePicker").max(horaLejana);
        }

        if (fechaSeleccionadaSinHora.getTime() === fechaActual.setHours(0, 0, 0, 0) && kendo.parseDate(horaSeleccionada, "HH:mm") > horaActual) {
            console.log('Ajustando hora seleccionada a la hora actual:', horaActual);
            $("#horaArriboInsert").data("kendoTimePicker").value(horaActual);
        }
    } else {
        console.log('Fecha o hora no seleccionada.');
        var horaLejana = "23:59";
        $("#horaArriboInsert").data("kendoTimePicker").max(horaLejana);
    }
        }

</script>
<div class="modal-dialog modal-xl boxShadow modal-dialog-centered">
    <div class="modal-content">
        <section class=" bg-white rounded">
            <div class="row align-items-center justify-content-between px-4 px-md-4 pt-3 pb-2">
                <div class="col-12 col-md-auto">
                    <div class="row align-items-center justify-content-center justify-content-md-start">
                        <div class="col-auto p-0">
                            <i class="icon-addGrua me-2  h1 colorPrimary"></i>
                        </div>
                        <div class="col-auto my-3">
                            <h2 class="m-0 h3"><b>Datos de Grúa Asignada</b></h2>
                        </div>
                    </div>
                </div>
                <div class="col-12 col-md-6 col-lg-7 col-xl-auto">
                    <div class="row">
                        <div class="col-auto btnOutline my-2 mx-auto mx-xl-2 p-0" onclick="goBack()">
                            @(Html.Kendo().Button()
                                .Name("backVehiculo")
                                .HtmlAttributes(new { @class = "px-5" })
                                .Content("<h6 class=\"m-0\"><i class=\"icon-back me-2\" data-bs-dismiss=\"modal\" aria - label = \"Close\" ></i><b>Regresar</b></h6>"))
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-5 pe-0">
                    <div class="bgSuccess py-1"></div>
                </div>
                <div class="col-7 ps-0">
                    <div class="bg-light py-1"></div>
                </div>
            </div>
            <div class="row">
                <div class="col-12 my-4">
                    <h5 class="px-4"><b>Datos de grúa asignada</b></h5>
                    <h6 class="px-4 text-muted">Completa los datos obligatorios para guardar.</h6>
                </div>
            </div>
            <div class="row justify-content-start align-items-center py-2">
               
            </div>
            <form id="datosGruaForm">
                <input type="hidden" id="Accion" value="Add" />
                <div class="row px-4" id="contenedor">
                    <div class="col-12">
                        <div class="controlForm my-3">
                            <label for="ddgrua">Número económico <b>(obligatorio)</b>:</label>
                            @(Html.Kendo().DropDownListFor(d => d.idGrua)
                                .DataTextField("Text")
                                .DataValueField("Value")
                           
                                .DataSource(source =>
                                {
                                    source.Read(read =>
                                    {
                                        read.Action("Gruas_Drop", "AsignacionGruas");
                                    });
                                })
                                .HtmlAttributes(new { style = "width:100%;", id = "idGruaInsert", required = "required" })
                                )
                        </div>
                    </div>
                    <div class="col-12 col-md-6 col-lg-3">
                        <div class="controlForm my-3">
                            <label for="datepicker1">Fecha de arribo <b>(obligatorio)</b>:</label>
                            @(Html.Kendo().DatePickerFor(t => t.fechaArribo).Max(DateTime.Now)
                                .Format("dd/MM/yyyy")
                               .Events(e =>
											{
												e.Change("validacionHoraArribo");
											})
                                .HtmlAttributes(new { style = "width: 90%", id = "fechaArriboInsert", required = "required" })
                                )
                        </div>
                        </div>
                    <div class="col-12 col-md-6 col-lg-3">

                        <div class="controlForm my-3">
                            <label for="timepicker1">Hora de arribo <b>(obligatorio)</b>:</label>
                            @(Html.Kendo().TimePickerFor(t => t.horaArribo)
                                .Format("HH:mm")
                                .Events(e =>
                                {
                                    e.Change("validacionHoraArribo");
                                })
                                .HtmlAttributes(new { style = "width: 90%", id = "horaArriboInsert", required = "required" })
                                )
                        </div>
                    </div>

                    <div class="col-12 col-md-6 col-lg-3">
                        <div class="controlForm my-3">
                            <label for="datepicker2">Fecha de inicio <b>(obligatorio)</b>:</label>
                            @(Html.Kendo().DatePickerFor(t => t.fechaInicio).Max(DateTime.Now)
                                .Format("dd/MM/yyyy")
                                 .Events(e =>
											{
												e.Change("validacionHoraInicio");
											})
                                .HtmlAttributes(new { style = "width: 90%", id = "fechaInicioInsert", required = "required" })
                                )
                        </div>
                    </div>
                     <div class="col-12 col-md-6 col-lg-3">
                        <div class="controlForm my-3">
                            <label for="timepicker2">Hora de inicio <b>(obligatorio)</b>:</label>
                            @(Html.Kendo().TimePickerFor(t => t.horaInicio)
                                .Events(e =>
                                {
                                    e.Change("validacionHoraInicio");
                                })
                                .Format("HH:mm")
                                .HtmlAttributes(new { style = "width: 90%", id = "horaInicioInsert",required = "required" })
                              
                                )
                        </div>
                    </div>

                    <div class="col-12 col-md-6 col-lg-3">
                        <div class="controlForm my-3">
                            <label for="datepicker3">Fecha de término <b>(obligatorio)</b>:</label>
                            @(Html.Kendo().DatePickerFor(t => t.fechaFinal).Max(DateTime.Now)
                                .Format("dd/MM/yyyy")
                                .HtmlAttributes(new { style = "width: 90%", id = "fechaFinalInsert", required = "required" })
                                .Events(e =>
                                {
                                    e.Change("validacionHoraFinal");
                                })
                                )
                        </div>
                    </div>
                    <div class="col-12 col-md-6 col-lg-3">
                        <div class="controlForm my-3">
                            <label for="timepicker3">Hora de término <b>(obligatorio)</b>:</label>
                            @(Html.Kendo().TimePickerFor(t => t.horaTermino)
                                .Format("HH:mm")
                                .Events(e =>
                                {
                                    e.Change("validacionHoraFinal");
                                })
                                .HtmlAttributes(new { style = "width: 90%", id = "horaTerminoInsert",required = "required" })
                             
                                )
                        </div>
                    </div>

                    <div class="col-12 col-md-6 col-lg-3">
                        <div class="controlForm my-3">
                            <label for="timeDifference">Diferencia en minutos <b>(obligatorio)</b>:</label>
                            @(Html.Kendo().TextBoxFor(t => t.tiempoManiobras)
                                .HtmlAttributes(new { style = "width: 100%", @readonly = "readonly", id="tiempoManiobrasInsert" }) // Marcar como solo lectura
                                )
                        </div>
                    </div>
                    <div class="row px-4" id="contenedor">
                        <!-- Otras columnas aquí -->

                        <div class="col-12">
                            <div class="row">
                                <div class="col-12 col-md-6 col-lg-3">
                                    <div class="controlForm my-3">
                                        <label for="switch2">Abanderamineto:</label>
                                        <div class="btnToggleActive">
                                            @(Html.Kendo().SwitchFor(t => t.AbanderamientoBool)
                                                .Name("abanderamientoSwitch1")
                                                .Checked(false)
                                                .Messages(c => c.Checked("Si").Unchecked("No"))
                                                .HtmlAttributes(new { data_checked = "true" })
                                                )
                                        </div>
                                    </div>
                                </div>

                                <div class="col-12 col-md-6 col-lg-3">
                                    <div class="controlForm my-3">
                                        <label for="switch2">Salvamento:</label>
                                        <div class="btnToggleActive">
                                            @(Html.Kendo().SwitchFor(t => t.SalvamentoBool)
                                                .Name("salvamentoSwitch1")
                                                .Checked(false)
                                                .Messages(c => c.Checked("Si").Unchecked("No"))
                                                .HtmlAttributes(new { data_valor = "true" })
                                                )
                                        </div>
                                    </div>
                                </div>

                                <div class="col-12 col-md-6 col-lg-3">
                                    <div class="controlForm my-3">
                                        <label for="switch3">Arrastre:</label>
                                        <div class="btnToggleActive">
                                            @(Html.Kendo().SwitchFor(t => t.ArrastreBool)
                                                .Name("arrastreSwitch1")
                                                .Checked(false)
                                                .Messages(c => c.Checked("Si").Unchecked("No"))
                                                .HtmlAttributes(new { data_checked = "true" })
                                                )
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Otras columnas aquí -->
                    </div>

                    <div class="col-12 col-md-6 col-lg-3">
                        <div class="controlForm my-3">
                            @(Html.Kendo().TextBoxFor(t => t.operadorGrua)
                                .Label(label => label.Content("Operador de la grúa <b>(obligatorio)</b>:"))
                                .Placeholder("Escribe el operador de la grúa")
                                .HtmlAttributes(new { style = "width: 100%", required = "required", id="operadorGruaInsert" })
                                )
                        </div>
                    </div>
                </div>

            </form>
            <!-- Botones -->
            <div class="row my-4">
                <div class="col-12 col-md-6 mx-md-auto">
                    <div class="row justify-content-around">
                        <div class="col-auto btnOutline my-2 mx-auto mx-xl-2 p-0">
                            <button type="button" data-bs-dismiss="modal" aria-label="Close">
                                <h6 class="m-0 px-3"><b>Cerrar</b></h6>
                            </button>
                        </div>
                        <div class="col-auto btnOutline btnOutlinePrimary my-2 mx-auto mx-xl-2 p-0">
                            <div class="controlButton" onclick="enviarDatos()">
                                @(Html.Kendo().Button()
                                    .Name("AddFactor")
                                    .HtmlAttributes(new { @class = "btnPrimary px-3" })
                                    .Content("<h5 class=\"m-0\"><b>Guardar</b></h5>"))
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
</div>

<script>
function enviarDatos() {
    var validator = $("#datosGruaForm").kendoValidator().data('kendoValidator');
    validator.validate();
    if (validator.validate()) {
        var formData = new FormData($("#datosGruaForm")[0]);
        var formData2 = $("#datosGruaForm");
        var Mydata = $("#datosGruaForm").serialize();


        var abanderamientoValue = $("#abanderamientoSwitch1").prop("checked") ? 1 : 0;
        var arrastreValue = $("#arrastreSwitch1").prop("checked") ? 1 : 0;
        var salvamentoValue = $("#salvamentoSwitch1").prop("checked") ? 1 : 0;

        formData.append("abanderamiento", abanderamientoValue);
        formData.append("arrastre", arrastreValue);
            formData.append("salvamento", salvamentoValue);

            formData.append("horaInicioInsert", $("#horaInicioInsert").data("kendoTimePicker").value());
            formData.append("horaArriboInsert", $("#horaArriboInsert").data("kendoTimePicker").value());
            formData.append("horaTerminoInsert", $("#horaTerminoInsert").data("kendoTimePicker").value());


        console.log("formData:", formData);
            showLoading();
        $.ajax({
                url: '/AsignacionGruas/InsertarDatos',
            type: 'POST',
                data: formData,
            processData: false,
            contentType: false,
            success: function (data) {
                sitteg_success("Se ha actualizado la información");
                $('#modalAgregarGrua').modal('hide');
                var grid = $("#gridGruas").data("kendoGrid");
                grid.dataSource.data(data);
                grid.refresh();
                    hideLoading();
            },
            error: function (error) {
                sitteg_warning("!Sucedió un error, inténtalo de nuevo más tarde...");
                hideLoading();
            }
        });
    } else {
        sitteg_info('Debe llenar los campos requeridos');
        return;
    }
}

    function updateDifference() {
        var fechaInicioPicker = $("#fechaInicioInsert").data("kendoDatePicker");
        var fechaFinalPicker = $("#fechaFinalInsert").data("kendoDatePicker");
        var horaInicioPicker = $("#horaInicioInsert").data("kendoTimePicker");
        var horaFinalPicker = $("#horaTerminoInsert").data("kendoTimePicker");

        // Verificar si los pickers están inicializados
        if (fechaInicioPicker && fechaFinalPicker && horaInicioPicker && horaFinalPicker) {
            var fechaInicio = fechaInicioPicker.value();
            var fechaFinal = fechaFinalPicker.value();
            var horaInicio = horaInicioPicker.value();
            var horaFinal = horaFinalPicker.value();

            // Verificar si las fechas y horas no son null
            if (fechaInicio !== null && fechaFinal !== null && horaInicio !== null && horaFinal !== null) {
                // Convertir las fechas y horas a objetos Date para calcular la diferencia
                var startDateTime = new Date(fechaInicio.getFullYear(), fechaInicio.getMonth(), fechaInicio.getDate(), horaInicio.getHours(), horaInicio.getMinutes());
                var endDateTime = new Date(fechaFinal.getFullYear(), fechaFinal.getMonth(), fechaFinal.getDate(), horaFinal.getHours(), horaFinal.getMinutes());

                // Calcular la diferencia en milisegundos
                var timeDifferenceMilliseconds = Math.abs(endDateTime - startDateTime);

                // Convertir la diferencia a minutos
                var timeDifferenceMinutes = Math.round(timeDifferenceMilliseconds / 60000);

                if (isNaN(timeDifferenceMinutes)) {
                    timeDifferenceMinutes = 0;
                }

                $("#tiempoManiobrasInsert").val(timeDifferenceMinutes);
            } else {
                // Si alguna de las fechas o horas es null, establecer el valor de tiempo en 0
                $("#tiempoManiobrasInsert").val(0);
            }
        }
    }

    // Llamar a la función cuando cambie alguna de las fechas o horas
    $("input[name='horaInicio'], input[name='horaTermino'], #fechaInicioInsert, #fechaFinalInsert").on("change", function () {
        updateDifference();
    });

    // Inicializar la diferencia al cargar la página
    $(document).ready(function () {
        updateDifference();
    });

    function goBack() {
        
        $('#modalAgregarGrua').modal('hide');
        $('#ModalBodyEditarGrua').modal('');
    }

  
</script>

