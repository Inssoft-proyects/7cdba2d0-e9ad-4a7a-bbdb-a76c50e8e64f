@model FechaHoraIngresoModel
<script>
	function validacionHora() {
		var fechaSeleccionadaString = $("#date").val();
		var horaSeleccionada = $("#HoraIngreso").val();

		var fechaActual = new Date();
		var fechaSeleccionada = kendo.parseDate(fechaSeleccionadaString, "dd/MM/yyyy");

		var horaMaxima = fechaActual.getHours().toString().padStart(2, '0') + ':' + fechaActual.getMinutes().toString().padStart(2, '0');
		var horaActual = kendo.parseDate(horaMaxima, "HH:mm");

		console.log('Fecha seleccionada (string):', fechaSeleccionadaString);
		console.log('Hora seleccionada (string):', horaSeleccionada);
		console.log('Fecha actual:', fechaActual);
		console.log('Fecha seleccionada (objeto):', fechaSeleccionada);
		console.log('Hora máxima permitida:', horaMaxima);
		console.log('Hora actual (objeto):', horaActual);

		if (fechaSeleccionada && horaSeleccionada) {
			var fechaSeleccionadaSinHora = new Date(fechaSeleccionada);
			fechaSeleccionadaSinHora.setHours(0, 0, 0, 0);

			if (fechaSeleccionadaSinHora.getTime() === fechaActual.setHours(0, 0, 0, 0)) {
				console.log('Estableciendo límite máximo de hora:', horaMaxima);
				$("#HoraIngreso").data("kendoTimePicker").max(horaMaxima);
			} else {
				console.log('Removiendo límite máximo de hora.');
				var horaLejana = "23:59";
				$("#HoraIngreso").data("kendoTimePicker").max(horaLejana);
			}

			if (fechaSeleccionadaSinHora.getTime() === fechaActual.setHours(0, 0, 0, 0) && kendo.parseDate(horaSeleccionada, "HH:mm") > horaActual) {
				console.log('Ajustando hora seleccionada a la hora actual:', horaActual);
				$("#HoraIngreso").data("kendoTimePicker").value(horaActual);
			}
		} else {
			console.log('Fecha o hora no seleccionada.');
			var horaLejana = "23:59";
			$("#HoraIngreso").data("kendoTimePicker").max(horaLejana);
		}
	}

</script>
<section class=" bg-white rounded">
	<div class="row align-items-center justify-content-between px-4 px-md-4 pt-3 pb-2">
		<div class="col-auto pe-0">
			<div class="row align-items-center justify-content-center justify-content-md-start">
				<div class="col-auto pe-0">
					<i class="icon-addInvolucrado h1 colorPrimary"></i>
				</div>
				<div class="col-auto my-3">
					<h2 class="m-0 h3"><b>Agregar ingreso al involucrado</b></h2>
				</div>
			</div>
		</div>
		<div class="col-auto">
			<div class="row">
				<div class="col-auto my-3">
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
			</div>
		</div>
	</div>
	<div class="row">
		<div class="col-12">
			<div class="bg-light py-1"></div>
		</div>

	</div>
	<div class="row">
		<div class="col-12 my-4">
			<h5 class="px-4"><b>Datos para ingreso del involucrado</b></h5>
			<h6 class="px-4 text-muted">Completa los datos obligatorios para guardar.</h6>
		</div>
	</div>
	<form id="fechaHoraForm" class="row justify-content-center px-4 mb-4 align-items-end">
		<div class="col-12 col-md-6">
			<div class="controlForm my-3">
				<label>Fecha:</label>
				<span>
					@Html.HiddenFor(model => model.IdPersona)
					@(Html.Kendo().DatePickerFor(model => model.FechaIngreso).Max(DateTime.Now)
						.Culture("es-ES")
						.Events(e =>
						{
							e.Change("validacionHora");
						})
						.HtmlAttributes(new { style = "width: 100%", id = "date" })
						.Value("")

						)
				</span>
			</div>
		</div>

		<div class="col-12 col-md-6">
			<div class="controlForm my-3">
				<label>Hora:</label>
				<span>
					@(Html.Kendo().TimePickerFor(model => model.HoraIngreso)
						.Label(l => l.Content("Hora:"))
						.Format("HH:mm")
						.Events(e =>
						{
							e.Change("validacionHora");
						})
						.Interval(1).Value("")
						.HtmlAttributes(new { style = "width: 100%", title = "timepicker" })
						)
				</span>
			</div>
		</div>
	</form>
	<div class="row my-4">
		<div class="col-12 col-md-6 mx-md-auto">
			<div class="row justify-content-around">
				<div class="col-auto btnOutline my-2 mx-auto mx-xl-2 p-0">
					<button type="button" data-bs-dismiss="modal" aria-label="Close">
						<h6 class="m-0 px-3"><b>Cerrar</b></h6>
					</button>
				</div>
				<div class="col-auto btnOutline btnOutlinePrimary my-2 mx-auto mx-xl-2 p-0">
					<div class="controlButton" onclick="agregarFechaHoraIngreso()">
						@(Html.Kendo().Button()
							.Name("AddFechaHora")
							.HtmlAttributes(new { @class = "btnPrimary px-3" })
							.Content("<h5 class=\"m-0\"><b>Guardar</b></h5>"))
					</div>
				</div>
			</div>
		</div>
	</div>
</section>
<script>
	function agregarFechaHoraIngreso() {
		event.preventDefault();

		var Mydata = $("#fechaHoraForm").serialize();
		console.log(Mydata);
		var Obj = Mydata.split("&");
		console.log(Obj)
		if (Obj[1] != null && (Obj[1].split("=")[1].indexOf("day") >= 0 || Obj[1].split("=")[1].indexOf("month") >= 0 || Obj[1].split("=")[1].indexOf("year") >= 0))
			sitteg_warning("!Ingresa una fecha valida");
		else if (Obj[2].split("=")[1] != null && (Obj[2].split("=")[1].indexOf("hours") >= 0 || Obj[2].split("=")[1].indexOf("minutes") >= 0))
			sitteg_warning("!Ingresa una hora valida");
		else {
			$('#agregarFechaHoraModal').modal('hide');
			$('modal-body').removeClass('model-open');
			$('.modal-backdrop').remove();
			showLoading();
			$.ajax({
				url: '@Url.Action("AgregarFechaHora")',
				type: 'POST',
				data: Mydata,
				success: function (result) {
					sitteg_success("Se ha agregado fecha y hora de ingreso");
					$("#tablaConFechaYHora").html(result);
					hideLoading();
				},
				error: function (error) {
					sitteg_warning("!Sucedio un error, intente mas tarde...");
					hideLoading();
				}
			});
		}
	}


	$(document).ready(function () {
		var datePicker = $("#date").data("kendoDatePicker");
		datePicker.value(null);
	});


</script>
