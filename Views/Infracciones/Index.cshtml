@model InfraccionesBusquedaModel

@{
    DateTime endDate = DateTime.Now;
    endDate = endDate.AddDays(1);
}


<div class="mainContainer bg-light">
    <section class="mx-md-3 mx-lg-4 mx-xl-5 bg-white boxShadow my-5 rounded">
        <div class="row align-items-center justify-content-between px-4 px-md-4 pt-3 pb-2">
            <div class="col-12 col-md-6 col-lg-5 col-xl-auto">
                <div class="row align-items-center justify-content-center justify-content-md-start">
                    <div class="col-auto">
                        <i class="icon-edit-car h1 colorPrimary"></i>
                    </div>
                    <div class="col-auto my-3">
                        <h2 class="m-0 h3"><b>Búsqueda de infracción</b></h2>
                    </div>
                </div>
            </div>
            <div class="col-12 col-md-6 col-lg-7 col-xl-auto">
                <div class="row">
                    <div class="col-auto btnOutline btnOutlinePrimary my-2 mx-auto mx-xl-2 p-0">
                        <button id="btnGuardarInfraccion" onclick="location.href='@Url.Action("Crear")'">
                            <h6 class="m-0 d-flex align-items-center"><i class="icon-addInfracion h5 mb-0 me-2"></i><b>Nueva infracción</b></h6>
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-12">
                <div class="bg-light py-1"></div>
            </div>
        </div>
        <div class="col-12 col-md-auto mt-4 mb-2">
            <h5 class="px-4"><b>Filtros de Búsqueda</b></h5>
            <h6 class="px-4 text-muted">Filtros de búsqueda para localizar la infracción. Se pueden combinar filtros, por ejemplo se puede combinar fecha y garantía.</h6>
        </div>
        <form class="row px-4 mb-4 align-items-end" id="frmSearch">

            <div class="col-12 col-md-6 col-lg-3">
                <div class="controlForm my-3">
                    <label>Inicio:</label>
                    @(Html.Kendo().DatePickerFor(t => t.FechaInicio)
                        .Value(DateTime.Now)
                        .Events(e => e.Change("startChange"))
                        .HtmlAttributes(new { style = "width: 100%", title = "datepicker", id = "start" })
                        )
                </div>
            </div>
            <div class="col-12 col-md-6 col-lg-3">
                <div class="controlForm my-3">
                    <label>Fin:</label>
                    @(Html.Kendo().DatePickerFor(t => t.FechaFin)
                        .Value(endDate)
                        .Events(e => e.Change("endChange"))
                        .HtmlAttributes(new { style = "width: 100%", title = "datepicker", id = "end" })
                        )
                </div>
            </div>
            <div class="col-12 col-md-6 col-lg-6">
            </div>
            <div class="col-12 col-md-6 col-lg-3">
                <div class="controlForm my-3">
                    @(Html.Kendo().TextBoxFor(t => t.folioInfraccion)
                        .Label(l => l.Content("Folio infracción:"))
                        .Placeholder("Ingresa el número de folio de infracción")
                        .HtmlAttributes(new { style = "width: 100%", Id = "txtFolioInfraccion" })
                        )
                </div>
            </div>

            <div class="col-12 col-md-6 col-lg-3">
                <div class="controlForm my-3">

                    @(Html.Kendo().TextBoxFor(t => t.placas)
                        .Label(l => l.Content("Placas:"))
                        .Placeholder("Ingresa el número de placa del vehículo")
                        .HtmlAttributes(new { style = "width: 100%", Id = "txtPlacas" })
                        )

                </div>
            </div>

            <div class="col-12 col-md-6 col-lg-3">
                <div class="controlForm mb-3">
                    <label>Estatus Infracción:</label>
                    <span>
                        @(Html.Kendo().DropDownListFor(d => d.IdEstatus)
                            .DataTextField("Text")
                            .DataValueField("Value")
                            .OptionLabel("Seleccione Estatus...")
                            .HtmlAttributes(new { style = "width:100%;", Id = "ddlEstatus" })
                            .Filter(FilterType.Contains)
                            .DataSource(source =>
                            {
                                source.Read(read =>
                                {
                                    read.Action("Estatus_Read", "Infracciones");
                                });
                            }))
                    </span>
                </div>
            </div>

            <div class="col-12 col-md-6 col-lg-3">
                <div class="controlForm mb-3">
                    <label>Tipo de cortesía:</label>
                    <span>
                        @(Html.Kendo().DropDownListFor(d => d.IdTipoCortesia)
                            .DataTextField("Text")
                            .DataValueField("Value")
                            .OptionLabel("Seleccione Cortesía...")
                            .HtmlAttributes(new { style = "width:100%;", Id = "ddlCortesia" })
                            .Filter(FilterType.Contains)
                            .DataSource(source =>
                            {
                                source.Read(read =>
                                {
                                    read.Action("Cortesias_Read", "Infracciones");
                                });
                            }))
                    </span>
                </div>
            </div>

            <div class="col-12 col-md-6 col-lg-3">
                <div class="controlForm mb-3">
                    <label>Dependencia:</label>
                    <span>
                        @(Html.Kendo().DropDownListFor(d => d.IdDependencia)
                            .DataTextField("Text")
                            .DataValueField("Value")
                            .OptionLabel("Seleccione Dependencia...")
                            .HtmlAttributes(new { style = "width:100%;", Id = "ddlDependencia" })
                            .Filter(FilterType.Contains)
                            .DataSource(source =>
                            {
                                source.Read(read =>
                                {
                                    read.Action("Dependencias_Read", "Infracciones");
                                });
                            }))
                    </span>
                </div>
            </div>

            <div class="col-12 col-md-6 col-lg-3">
                <div class="controlForm mb-3">
                    <label>Tipo de garantía:</label>
                    <span>

                        @(Html.Kendo().DropDownListFor(d => d.IdGarantia)
                            .DataTextField("Text")
                            .DataValueField("Value")
                            .OptionLabel("Seleccione Garantía...")
                            .HtmlAttributes(new { style = "width:100%;", Id = "ddlGarantia" })
                            .Filter(FilterType.Contains)
                            .DataSource(source =>
                            {
                                source.Read(read =>
                                {
                                    read.Action("Garantias_Read", "Infracciones");
                                });
                            }))

                    </span>
                </div>
            </div>
            <div class="col-12 col-md-6 col-lg-3">
                <div class="controlForm mb-3">
                    <label>Delegación/Oficina:</label>
                    <span>
                        @(Html.Kendo().DropDownListFor(d => d.IdDelegacion)
                            .DataTextField("Text")
                            .DataValueField("Value")
                            .OptionLabel("Seleccione Delegación...")
                            .HtmlAttributes(new { style = "width:100%;", Id = "ddlDelegacion" })
                            .Filter(FilterType.Contains)
                            .DataSource(source =>
                            {
                                source.Read(read =>
                                {
                                    read.Action("Delegaciones_Read", "Infracciones");
                                });
                            }))

                    </span>
                </div>
            </div>

            <div class="col-12 col-md-6 col-lg-3">
                <div class="controlForm my-3">
                    @(Html.Kendo().TextBoxFor(t => t.Propietario)
                        .Label(l => l.Content("Propietario:"))
                        .Placeholder("Ingresa un propietario")
                        .HtmlAttributes(new { style = "width: 100%", Id = "txtPropietario" })
                        )
                </div>
            </div>

            <div class="col-12 col-md-6 col-lg-3">
                <div class="controlForm my-3">

                    @(Html.Kendo().TextBoxFor(t => t.Conductor)
                        .Label(l => l.Content("Conductor:"))
                        .Placeholder("Ingresa el conductor")
                        .HtmlAttributes(new { style = "width: 100%", Id = "txtConductor" })
                        )

                </div>
            </div>
            <div class="col-12 col-md-6 col-lg-3">
                <div class="controlForm my-3">

                    @(Html.Kendo().TextBoxFor(t => t.NumeroLicencia)
                        .Label(l => l.Content("No. Licencia:"))
                        .Placeholder("Ingresa el número de licencia")
                        .HtmlAttributes(new { style = "width: 100%", Id = "txtNumeroLicencia" })
                        )

                </div>
            </div>

            <div class="col-12 col-md-6 col-lg-3">
                <div class="controlForm my-3">
                    @(Html.Kendo().TextBoxFor(t => t.NumeroEconomico)
                        .Label(l => l.Content("No. Económico:"))
                        .Placeholder("Ingresa el número económico")
                        .HtmlAttributes(new { style = "width: 100%", Id = "txtNumeroEconomico" })
                        )
                </div>
            </div>

            <div class="col-12 col-md-6 col-lg-3">
                <div class="controlButton my-3">
                    <button class="btnPrimary" type="button" onclick="submitSearch()">  <h5 class="m-0"><b>Buscar</b></h5></button>
                </div>
            </div>

        </form>

        <div id="listadoInfracciones">
            <partial name="_ListadoInfracciones" model="Model.ListInfracciones" />
        </div>
    </section>

</div>

<script>

    function submitSearch() {
        var Mydata = $("#frmSearch").serialize();
        //console.log(Mydata);
        $.ajax({
            url: '@Url.Action("ajax_BuscarInfracciones")',
            type: 'POST',
            data: Mydata,
            success: function (result) {
                $("#listadoInfracciones").html(result);
            }
        });
    }

    function startChange() {
        var endPicker = $("#end").data("kendoDatePicker"),
            startDate = this.value();

        if (startDate) {
            startDate = new Date(startDate);
            startDate.setDate(startDate.getDate() + 1);
            endPicker.min(startDate);
        }
    }

    function endChange() {
        var startPicker = $("#start").data("kendoDatePicker"),
            endDate = this.value();

        if (endDate) {
            endDate = new Date(endDate);
            endDate.setDate(endDate.getDate() - 1);
            startPicker.max(endDate);
        }
    }
</script>

