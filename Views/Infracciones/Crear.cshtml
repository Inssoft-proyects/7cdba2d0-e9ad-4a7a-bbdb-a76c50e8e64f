@model InfraccionesModel

@{
	@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor;
	var listaIdsPermitidosJson = @HttpContextAccessor.HttpContext.Session.GetString("IdsPermitidos").ToString();
	var autorizaciones = @HttpContextAccessor.HttpContext.Session.GetString("Autorizaciones").ToString();
	var regreso = ViewBag.Regreso;
	var horaMaxima = "00:01";
	

}

<script>

	$(document).ready(function () {
		var access = @listaIdsPermitidosJson;
		var auth = @autorizaciones;

		if (access != undefined && access != '') {
			if (!access.toString().includes(localStorage.getItem("menuId"))) {
				Swal.fire({
					icon: "error",
					title: "¡El usuario no tiene acceso a esta opción!"
				});
				setTimeout(() => {
					window.location.href = "/Principal";
				}, 200);
			} else {

			}
		} else {
			Swal.fire({
				icon: "error",
				title: "¡El usuario no tiene acceso a esta opción!"
			});
			setTimeout(() => {
				window.location.href = "/Principal";
			}, 200);
		}
	});
	function validacionHora(){
		var val = $("#dateTime").val()
		var element =$("#dateTime").data("kendoTimePicker")
		var fecha = $("#fechaInfraccion").val()
		var auxiliarFecha = new Date(Date.now())
		var fechaActual = new Date(auxiliarFecha.getFullYear(),auxiliarFecha.getMonth(),auxiliarFecha.getDate())
		var splitFecha = fecha.split('/')
		var fechaSeleccion = fecha == "" ? new Date(1910,0,1):new Date(parseInt(splitFecha[2]),parseInt(splitFecha[1])-1,parseInt(splitFecha[0])) 
		var horaActual = (auxiliarFecha.getHours()*100) + auxiliarFecha.getMinutes()
		
		if (val){
			var can = val.indexOf(':') > -1
			if (can){
				var horaAjustada = val.replace(':')
				var horaSeleccion = parseInt(horaAjustada)
				if(fechaActual > fechaSeleccion){

				}else{
					if(horaActual < horaSeleccion){
							element.value("")
						element.trigger("change")
					}
				}

			}else{
				element.value("")
				element.trigger("change")
			}
			console.log(val)

		}
	}

	function DataFilterCatalogTramo(){
		
		var value = $("#ddlCarreteras").val()
		return { idCarretera: value }
	}

	function OnChangeCarreteras() {
		var ddl = $("#idTramo").data("kendoDropDownList")
		ddl.dataSource.read()
	}



	//$("#ddlCarreteras").on("change", function () {
	//	var value = $(this).val();
	//	if (value == "") {
	//		$("#idTramo option[value!='']").remove();
	//	}
	//	else {
	//		_set_combo_catalog("CatTramosByFilter", value, "idTramo", "false", "divTramo", "");
	//		$('#idTramo').kendoDropDownList();
	//	}
	//});


</script>

<div class="mainContainer bg-light">
	<section class="mx-md-3 mx-lg-4 mx-xl-5 bg-white boxShadow my-5 rounded">
		<div class="row align-items-center justify-content-between px-4 px-md-4 pt-3 pb-2">
			<div class="col-12 col-md-auto">
				<div class="row align-items-center justify-content-center justify-content-md-start">
					<div class="col-auto">
						<div class="border border-2 border-dark rounded-circle">
							<h5 class="m-0 numberCard d-flex align-items-center justify-content-center">
								<b>1</b>
							</h5>
						</div>
					</div>
					<div class="col-auto p-0">
						<i class="icon-infracion h1 colorPrimary"></i>
					</div>
					<div class="col-auto my-3">
						<h2 class="m-0 h3"><b>Captura de Infracción</b></h2>
					</div>
				</div>
			</div>

		</div>
		<div class="row">
			<div class="col-5 pe-0">
				<div class="bgSuccess py-1"></div>
			</div>
			<div class="col-7 ps-0">
				<div class="bg-light py-1"></div>
			</div>
		</div>
		<div class="row">
			<div class="row align-items-center justify-content-between px-4 px-md-4 pt-3 pb-2">
				<div class="col-12 col-md-6 col-lg-5 col-xl-auto">
					<div class="row align-items-center justify-content-center justify-content-md-start">
						<div class="col-auto">
							<i class="icon-addInfracion h1 colorPrimary"></i>
						</div>
						<div class="col-auto my-3">
							<h5 class="px-4 my-4"><b>Datos de la infracción</b></h5>
							<h6 class="px-4 my-4 text-muted">Completa los datos solicitados.</h6>
						</div>
					</div>
				</div>
				<div class="col-12 col-md-6 col-lg-7 col-xl-auto">
					<div class="row">
						<div class="col-auto btnOutline btnOutlinePrimary my-2 mx-auto mx-xl-2 p-0">
							<button href="#" id="btnGuardarInfraccion" onclick="btnGuardarInfraccion()">
								<h6 class="m-0 d-flex align-items-center"><i class="icon-addInfracion h5 mb-0 me-2"></i><b>Guardar infracción</b></h6>
							</button>
						</div>
					</div>
				</div>
			</div>
			<div>
				<nav class="tabCustom">
					@*navegador tabs*@
					<div class="nav nav-tabs row mx-0" id="nav-tab" role="tablist">
						<button class="nav-link active col" id="informacionInfraccion-tab" data-bs-toggle="tab" data-bs-target="#informacionInfraccion-container" type="button" role="tab" aria-controls="informacionInfraccion-container" aria-selected="true">
							<div class="row justify-content-center align-items-center px-2 py-1">
								<div class="col-auto radioCustom p-0">
									<div class="rounded-circle m-1"></div>
								</div>
								<div class="col-auto p-0">
									<h6 class="m-0"><b>Información</b></h6>
								</div>
							</div>
						</button>
						<button class="nav-link col" id="lugar-tab" data-bs-toggle="tab" data-bs-target="#lugar-container" type="button" role="tab" aria-controls="lugar-container" aria-selected="false">
							<div class="row justify-content-center align-items-center px-2 py-1">
								<div class="col-auto radioCustom p-0">
									<div class="rounded-circle m-1"></div>
								</div>
								<div class="col-auto p-0">
									<h6 class="m-0"><b>Lugar</b></h6>
								</div>
							</div>
						</button>
						<button class="nav-link col" id="vehiculo-tab" data-bs-toggle="tab" data-bs-target="#vehiculo-container" type="button" role="tab" aria-controls="vehiculo-container" aria-selected="false">
							<div class="row justify-content-center align-items-center px-2 py-1">
								<div class="col-auto radioCustom p-0">
									<div class="rounded-circle m-1"></div>
								</div>
								<div class="col-auto p-0">
									<h6 class="m-0"><b>Vehículo</b></h6>
								</div>
							</div>
						</button>
						<button class="nav-link col" id="conductor-tab" data-bs-toggle="tab" data-bs-target="#conductor-container" type="button" role="tab" aria-controls="conductor-container" aria-selected="false">
							<div class="row justify-content-center align-items-center px-2 py-1">
								<div class="col-auto radioCustom p-0">
									<div class="rounded-circle m-1"></div>
								</div>
								<div class="col-auto p-0">
									<h6 class="m-0"><b>Conductor</b></h6>
								</div>
							</div>
						</button>

					</div>
				</nav>
				<form id="frmCrearInfraccion">
					@Html.HiddenFor(m=> m.placasVehiculo)
					@Html.HiddenFor(m=> m.NumTarjetaCirculacion)
					@*Contenidos de cada tab*@
					<div class="tab-content" id="nav-tabContent">
						<div class="tab-pane tabCustomConteiner fade show active" id="informacionInfraccion-container" role="tabpanel" aria-labelledby="informacionInfraccion-tab">
							<div class="row align-items-center justify-content-between px-4 px-md-4 pt-3 pb-2">
								<div class="col-12 col-md-6 col-lg-5 col-xl-auto">
									<div class="row align-items-center justify-content-center justify-content-md-start">
										<div class="col-auto">
											<i class="icon-infracion h1 colorPrimary"></i>
										</div>
										<div class="col-auto my-3">
											<h5 class="px-4"><b>Información de infracción</b></h5>
										</div>
									</div>
								</div>
							</div>
							<div class="row my-4 px-4">
							

								<div class="row my-4 px-4">
									<div class="form-group col-md-3 controlForm">
										<label>Fecha infracción <b>(obligatorio)</b>:</label>
										@(Html.Kendo().DatePickerFor(t => t.fechaInfraccion).Max(DateTime.Now)
											.Label(l => l.Content("Fecha: <b>(obligatorio)</b>:"))
											.Format("dd/MM/yyyy")
											.Culture("es-ES")
											.Events(e =>
											{
												e.Change("cambiaFecha");
											})
											.Value("")
											.HtmlAttributes(new { style = "width: 100%", id = "fechaInfraccion" })
											)
									</div>
								

									<div class="form-group col-md-2 controlForm">
										
										<label class="text-muted">Hora:</label>
										@(Html.Kendo().TimePickerFor(t => t.horaInfraccion).Interval(1)											
											.Label(l => l.Content("Hora:"))	
											.Events(s=>s.Change("validacionHora"))
											.Format("HH:mm")
											.Culture("es-ES")
											.Value("")
											.HtmlAttributes(new { style = "width: 100%", id = "dateTime" })
											)
									</div>
								</div>
							</div>
							<div class="row my-4 px-4">
								<div class="form-group col-md-4">
									<div class="controlForm">
										<label>Folio <b>(obligatorio):</b></label>
										@(Html.Kendo().TextBoxFor(t => t.folioInfraccion)
											.Placeholder("Ingresa folio")
											.HtmlAttributes(new { style = "width: 100%", required = "required" })
											)
									</div>
								</div>
								<div class="form-group col-md-4">
									<div class="controlForm">
										<label>Oficial <b>(obligatorio):</b></label>
										@(Html.Kendo().DropDownList()
											.Name("idOficial")
											.DataTextField("Text")
											.DataValueField("Value")
											.DataSource(source =>
											{
												source.Read(read =>
												{
													read.Action("OficialesDependencia_Drop", "Oficiales");
												});
											})
											.OptionLabel("-- Seleccione --")
											.Filter(FilterType.Contains)

											.HtmlAttributes(new { style = "width:100%;", required = "required" })
											)
									</div>
								</div>
								<div class="form-group col-md-4">
									<div class="controlForm">
										<label>Municipio <b>(obligatorio):</b></label>
										@(Html.Kendo().DropDownList()
											.Name("idMunicipio")
											.DataTextField("Text")
											.DataValueField("Value")
											.DataSource(source =>
											{
												source.Read(read =>
												{
													read.Action("Municipios_Por_Delegacion_Drop", "Infracciones");
												});
											})
											.OptionLabel("-- Seleccione --")
											.Filter(FilterType.Contains)

											.HtmlAttributes(new { style = "width:100%;", required = "required" })
											)
									</div>
								</div>
							</div>
							<div class="row">
								<div class="col-12">
									<div class="tabCustomEnd"></div>
								</div>
							</div>
						</div>
						<div class="tab-pane tabCustomConteiner fade show" id="lugar-container" role="tabpanel" aria-labelledby="lugar-tab">
							<div class="row align-items-center justify-content-between px-4 px-md-4 pt-3 pb-2">
								<div class="col-12 col-md-6 col-lg-5 col-xl-auto">
									<div class="row align-items-center justify-content-center justify-content-md-start">
										<div class="col-auto">
											<i class="icon-carretera h1 colorPrimary"></i>
										</div>
										<div class="col-auto my-3">
											<h5 class="px-4"><b>Lugar de la infracción</b></h5>
										</div>
									</div>
								</div>
							</div>
							<div class="row my-4 px-4">
								<div class="form-group col-md-4">
									<div class="controlForm">
										<label>Carretera <b>(obligatorio):</b></label>
										@(
											Html.Kendo().DropDownList()
													.Name("idCarretera")
													.BindTo((SelectList)ViewBag.CatCarreteras)
													.Filter(FilterType.Contains)
													.Events(ev =>
													{
														ev.Change("OnChangeCarreteras");											

												})
											.OptionLabel("-- Seleccione --")
											.HtmlAttributes(new { style = "width:100%;", id = "ddlCarreteras", required = "required" })
											)
									</div>
								</div>
								<div class="form-group col-md-4">
									<div class="controlForm">
										<label>Tramo <b>(obligatorio):</b></label>
										<div id="divTramo">
											@(
												Html.Kendo().DropDownListFor(f => f.idTramo)
															.Filter(FilterType.Contains)												
															.OptionLabel("-- Seleccione --")
															.DataTextField("Text")
															.DataValueField("Id")
															
															.DataSource(s=> {
																s.Read(r =>
																{
																	r.Action("GetCatalogTramoFilter", "infracciones").Data("DataFilterCatalogTramo");
																});
													
													})

												.HtmlAttributes(new { style = "width:100%;", required = "required" })
												)
										</div>
									</div>
								</div>
								<div class="form-group col-md-4">
									<div class="controlForm">
										@(Html.Kendo().TextBoxFor(t => t.kmCarretera)
											.Label(l => l.Content("Kilómetro <b>(obligatorio)</b>:"))
											.HtmlAttributes(new { style = "width: 100%; height:58px;", required = "required" })
											)
									</div>
								</div>
							</div>
							<div class="row my-4 px-4">
								<div class="form-group col-md-3">
									<div class="controlForm">
										@(Html.Kendo().TextBoxFor(t => t.lugarCalle)
											.Label(l => l.Content("Calle:"))
											.Placeholder("Ingresa calle")
											.HtmlAttributes(new { style = "width: 100%" })
											)
									</div>
								</div>
								<div class="form-group col-md-3">
									<div class="controlForm">
										@(Html.Kendo().TextBoxFor(t => t.lugarNumero)
											.Label(l => l.Content("Número:"))
											.Placeholder("Ingresa número")
											.HtmlAttributes(new { style = "width: 100%" })
											)
									</div>
								</div>
								<div class="form-group col-md-3">
									<div class="controlForm">
										@(Html.Kendo().TextBoxFor(t => t.lugarColonia)
											.Label(l => l.Content("Colonia:"))
											.Placeholder("Ingresa colonia")
											.HtmlAttributes(new { style = "width: 100%" })
											)
									</div>
								</div>
								<div class="form-group col-md-3">
									<div class="controlForm">
										@(Html.Kendo().TextBoxFor(t => t.lugarEntreCalle)
											.Label(l => l.Content("Entre calle: "))
											.Placeholder("Ingresa entre calle")
											.HtmlAttributes(new { style = "width: 100%" })
											)
									</div>
								</div>
							</div>
							<div class="row">
								<div class="col-12">
									<div class="tabCustomEnd"></div>
								</div>
							</div>
						</div>

						<div class="tab-pane tabCustomConteiner fade show" id="vehiculo-container" role="tabpanel" aria-labelledby="vehiculo-tab">
							<div class="row align-items-center justify-content-between px-4 px-md-4 pt-3 pb-2">
								<div class="col-12 col-md-6 col-lg-5 col-xl-auto">
									<div class="row align-items-center justify-content-center justify-content-md-start">
										<div class="col-auto">
											<i class="icon-edit-car h1 colorPrimary"></i>
										</div>
										<div class="col-auto my-3">
											<h5 class="px-4"><b>Vehículo de la infracción</b></h5>
											@*<h6 class="px-4 text-muted">Marque el vehículo que desea asociar.</h6>*@
										</div>
									</div>
								</div>
								<div class="col-12 col-md-6 col-lg-7 col-xl-auto">
									<div class="row">
										<div class="col-auto btnOutline btnOutlinePrimary my-2 mx-auto mx-xl-2 p-0">
											<button id="btnNuevoVehiculo" onclick="mostrarModalAgregarVehiculo()" type="button">
												<h6 class="m-0 d-flex align-items-center"><i class="icon-addCar h5 mb-0 me-2"></i><b>Agregar nuevo vehículo</b></h6>
											</button>
										</div>
									</div>
								</div>
							</div>
							@Html.HiddenFor(m=> m.idVehiculo)

							<div class="row my-4 px-4">
									<div id="detalleVehiculo">
									</div>

								<div class="row my-4 px-4">
									<div id="listadoVehiculos">
										<partial name="_ListadoVehiculos" model="ViewBag.Vehiculos" />
									</div>
								</div>
							
								<div class="row">
									<div class="col-12">
										<div class="tabCustomEnd"></div>
									</div>
								</div>
							</div>
						</div>
						<div class="tab-pane tabCustomConteiner fade show" id="conductor-container" role="tabpanel" aria-labelledby="conductor-tab">
							<div class="row align-items-center justify-content-between px-4 px-md-4 pt-3 pb-2">
								<div class="col-12 col-md-6 col-lg-5 col-xl-auto">
									<div class="row align-items-center justify-content-center justify-content-md-start">
										<div class="col-auto">
											<i class="icon-conductor h1 colorPrimary"></i>
										</div>
										<div class="col-auto my-3">
											<h5 class="px-4"><b>Conductor de la infracción</b></h5>
											<h6 class="px-4 text-muted" id="textoConductor"></h6>
										</div>
									</div>
								</div>
								<div class="col-12 col-md-6 col-lg-7 col-xl-auto">
									<div class="row">
										<div class="col-auto btnOutline btnOutlinePrimary my-2 mx-auto mx-xl-2 p-0">
											<button type="button" href="#" id="btnNuevoConductor" onclick="ProPietarioConductor()">
												<h6 class="m-0 d-flex align-items-center"><i class="icon-addConductor h5 mb-0 me-2"></i><b>Propietario Como Conductor</b></h6>
											</button>
										</div>
																				<div class="col-auto btnOutline btnOutlinePrimary my-2 mx-auto mx-xl-2 p-0">
											<button type="button" href="#" id="btnNuevoConductor" onclick="OmitirConductor()">
												<h6 class="m-0 d-flex align-items-center"><i class="icon-addConductor h5 mb-0 me-2"></i><b>Se Ignora</b></h6>
											</button>
										</div>
										<div class="col-auto btnOutline btnOutlinePrimary my-2 mx-auto mx-xl-2 p-0">
											<button type="button" href="#" id="btnNuevoConductor" onclick="mostrarModalAgregarConductor()">
												<h6 class="m-0 d-flex align-items-center"><i class="icon-addConductor h5 mb-0 me-2"></i><b>Agregar nuevo conductor</b></h6>
											</button>
										</div>
									</div>
								</div>
							</div>
							@Html.HiddenFor(m=> m.idPersona)
							<div class="row my-4 px-4">
								<div id="detallePersonas">
								</div>
							</div>
							<input type="hidden" id="hdnIdPersonaTemp" value="" />
							<div class="row my-4 px-4">
								<div id="listadoPersonas">
									<partial name="_ListadoPersonas" model="ViewBag.Personas" />
								</div>
							</div>
							<div class="row">
								<div class="col-12">
									<div class="tabCustomEnd"></div>
								</div>
							</div>
						</div>
					</div>

				</form>
			</div>
		</div>
		<!--Modal agregar conductor-->
		<div class="modal fade modalCustom" id="agregarConductorModal" aria-labelledby="agregarVehiculoLabel" aria-hidden="true">
			<div class="modal-dialog modal-xl" role="document">
				<div class="modal-content">
					<div class="modal-body" id="ModalBodyAgregarConductor">
					</div>
				</div>
			</div>
		</div>


		<div class="modal fade modalCustom" id="agregarVehiculoModal" aria-labelledby="agregarVehiculoLabel" aria-hidden="true">
			<div class="modal-dialog modal-lg" role="document">
				<div class="modal-content">
					<div class="modal-body" id="ModalBodyAgregarVehiculo">
					</div>
				</div>
			</div>
		</div>
	</section>
</div>
<script>




	function OmitirConductor(){

		showLoading();

		$.ajax({
			url: '@Url.Action("ajax_OmitirConductor")',
			type: 'POST',
			data: {},
			dataType: "json",
			success: function (result) {

				if (result) {

					sitteg_success('Elemento guardado correctamente')
					$("#idPersona").val(result)
				}
				hideLoading();
				$("#textoConductor").empty().append("Se ignoro el conductor")
				var grid = $("#gridInfraccionesPersonas").data("kendoGrid");
				grid.clearSelection();

			},
			error: function (xhr, status) {
				var errmsg = xhr.responseText;
				console.log(errmsg)
				sitteg_warning('Lo sentimos, ha ocurrido un error.');
				hideLoading();
			}
		});



	}



	function ProPietarioConductor() {


		$("#textoConductor").empty().append("El propietario es el conductor")
		var grid = $("#gridInfraccionesPersonas").data("kendoGrid");
		grid.clearSelection();
		var result =$("#Persona_idPersona").val()

		if(result){
			$("#idPersona").val(result)
			sitteg_success('Elemento guardado correctamente')
		}
		else{
			sitteg_warning('Debes seleccionar un vehiculo con un propietario asignado');
		}



		

		


	}



	function btnGuardarInfraccion() {
		sessionStorage.setItem('redirectTo', '/Infracciones/Crear/');
		var controlsValidate = [];
		var isValid = true;

		// ARRAY DE CONTROLES REQUERIDOS PARA QUE SEAN VALIDADOS
		controlsValidate.push({ 'controlName': 'fechaInfraccion' });
		controlsValidate.push({ 'controlName': 'dateTime' });

		controlsValidate.push({ 'controlName': 'folioInfraccion' });
		if (!isControlsValid(controlsValidate)) { isValid = false; }

		controlsValidate = [];
		controlsValidate.push({ 'controlName': 'idOficial' });
		controlsValidate.push({ 'controlName': 'idMunicipio' });
		
		if (!isControlsValidDropDown(controlsValidate)) { isValid = false; }

		if (!isValid) {
			sitteg_warning('Hacen falta datos o existen datos incorrectos, favor de verificar.');
			$("#informacionInfraccion-tab").click();
			return;
		}
		

		isValid = true;
		controlsValidate = [];
		controlsValidate.push({ 'controlName': 'kmCarretera' });
		if (!isControlsValid(controlsValidate)) { isValid = false; }

		controlsValidate = [];
		controlsValidate.push({ 'controlName': 'ddlCarreteras' });
		controlsValidate.push({ 'controlName': 'idTramo' });
		
		if (!isControlsValidDropDown(controlsValidate)) { isValid = false; }

		if (!isValid) {
			sitteg_warning('Hacen falta datos o existen datos incorrectos, favor de verificar.');
			$("#lugar-tab").click();
			return;
		}

		if ($("#idVehiculo").val() == '') {
			sitteg_warning('Debe seleccionar un vehículo');
			return;
		}

		if ($("#idPersona").val() == '') {
			sitteg_warning('Debe seleccionar un conductor');
			return;
		}
		
			var formData = $("#frmCrearInfraccion").serialize();

			showLoading();

			$.ajax({
				url: '@Url.Action("ajax_crearInfraccion")',
				type: 'POST',
				data: formData,
				dataType: "json",
				success: function (result) {
					if (result.id) {

						sitteg_success('Elemento guardado correctamente')
						window.setTimeout(function () {
						window.location.href = '/Infracciones/Editar/?id=' + result.id + '&regreso='+@regreso
						}, 500);
						hideLoading();
					}
					else{
						sitteg_warning('El folio ya existe.');
						hideLoading();
					}
				},
				error: function (xhr, status) {
					var errmsg = xhr.responseText;
					console.log(errmsg)
					sitteg_warning('Lo sentimos, ha ocurrido un error.');
					hideLoading();
				}
			});
	}

	function isPropietarioOnChange(e) {
		var isPropietario = e.checked;
		if (isPropietario) {
			$("#listadoPersonas").hide();
			$("#listadoPersonas").html("");
			$("#detallePersonas").show();
			idPersona = $("#hdnIdPersonaTemp").val();
			buscarPersona(idPersona);
		}
		else {
			getListadoPersonasInfracciones();
			$("#listadoPersonas").show();
			$("#detallePersonas").hide();
			$("#idPersona").val('');
		}
	}
	function buscarVehiculo(pidVehiculo) {
		showLoading();
		$.ajax({
			type: "GET",
			url: '@Url.Action("ajax_detalleVehiculo")',
			data: {
				"idVehiculo": pidVehiculo,
			},
			success: function (data) {
				console.log("DATVE",data)
                $("#detalleVehiculo").html(data);
				hideLoading();
			}, error: function () {
				//sitteg_warning("Ocurrio un error al procesar su solicitud.");
				hideLoading();
			}

		});
	}

	function buscarPersona(pidPersona) {
		showLoading();

		$.ajax({
			type: "GET",
			url: '@Url.Action("ajax_detallePersona")',
			data: {
				"idPersona": pidPersona,
			},
			success: function (data) {
				$("#detallePersonas").html(data);
				hideLoading();
			},
			error: function () {
				hideLoading();
			}
		});
	}

	function getListadoPersonasInfracciones() {
		$("#listadoPersonas").show();
		showLoading();
		$.ajax({
			type: "GET",
			url: '@Url.Action("ajax_listadoPersonasInfracciones")',
			success: function (data) {
				$("#listadoPersonas").html(data);
				hideLoading();
			}, error: function () {
				sitteg_warning("Ocurrio un error al procesar su solicitud.");
				hideLoading();
			}

		});
	}

	function mostrarModalAgregarConductor() {
		$.ajax({
			url: '@Url.Action("ModalAgregarConductor")',
			type: 'POST',
			contentType: "application/json; charset=utf-8",
			dataType: "html",
			success: function (data) {
				$('#ModalBodyAgregarConductor').html(data);
				$('#agregarConductorModal').modal({ backdrop: 'static', keyboard: false });
				$('#agregarConductorModal').modal('show');
			}
		});
	}

	function mostrarModalAgregarVehiculo() {

		$.ajax({
			url: '@Url.Action("ModalAgregarVehiculo")',
			type: 'POST',
			success: function (data) {
				$('#ModalBodyAgregarVehiculo').html(data);
				$('#agregarVehiculoModal').modal('show');
			}
		});
	}

	$(document).ready(function () {
		$("#kmCarretera").on("input", function () {
			var value = this.value;
			if (value !== "") {
				this.value = value.replace(/[^\d.]/g, "");
			}
		});

		$("#kmCarretera").on("paste", function (e) {
			e.preventDefault();
			var clipboardData = e.originalEvent.clipboardData.getData('text/plain');
			if (/^\d+$/.test(clipboardData)) {
				document.execCommand('insertText', false, clipboardData);
			}
		});
	});
		
	 $(document).ready(function () {
        $("#placas").prop('disabled', true);
        $("#idEntidad").prop("disabled", true);
        $('#tarjeta').prop("disabled", true);
        $('#Persona_nombreCompleto').prop("disabled", true);
        $("#motor").prop("disabled", true);
        $("#numeroEconomico").prop("disabled", true);
        $("#otros").prop("disabled", true);
        $("#poliza").prop("disabled", true);
        $("#capacidad").prop("disabled", true);
        $("#idColor").prop("disabled", true);
    });




	
    function onRowSelect() {
            
        var grid = $("#gridPersonasLicencia").data("kendoGrid");
        var selectedRowData = grid.dataItem(grid.select());

        console.log("EE", selectedRowData);
        
        const tipoLicenciaMapping = {
                "TIPO A  CHOFER AUTOMOVILISTA": 1,
                "TIPO B CHOFER SERVICIO PÚBLICO": 2,
                "TIPO C  Chofer Servicio de Carga": 3,
                "TIPO D -MOTOCICLISTA": 4,
                "PERMISO A -AUTOMOVIL-": 6,
                "PERMISO D -MOTOCICLETA-": 7,
                "NO APLICA": 8,
                "TIPO A": 1,
                "TIPO B": 2,
                "TIPO C": 3,
                "TIPO D": 4,
                "PERMISO A": 6,
                "PERMISO D": 7,
                "A-AUTOMOVILISTA": 1,
                "B-CHOFER DE SERVICIO PÚBLICO": 2,
                "C-CHOFER DE SERVICIO DE CARGA": 3,
                "D-MOTOCICLISTA": 4,
                "PA-PERMISO AUTOMOVILISTA": 6,
                "PD-PERMISO MOTOCICLISTA": 7,

            };
           
            const tipoLicenciaNumero = tipoLicenciaMapping[selectedRowData.tipoLicencia] || 0;
           
            selectedRowData.idTipoLicencia = tipoLicenciaNumero;
         console.log("4..." )
          console.log("4.1.." + selectedRowData.nombreCompleto)
         //   showLoading();
            var fd = new FormData();
            fd.append("nombre", selectedRowData.nombre);
            fd.append("apellidoPaterno", selectedRowData.apellidoPaterno);
            fd.append("apellidoMaterno", selectedRowData.apellidoMaterno);
            fd.append("CURP", selectedRowData.CURP);
            fd.append("RFC", selectedRowData.RFC);
            fd.append("numeroLicencia", selectedRowData.numeroLicencia);
            fd.append("tipoLicencia", tipoLicenciaNumero);
			fd.append("idGenero", selectedRowData.idGenero);
			fd.append("fechaNacimiento", selectedRowData.fechaNacimiento);
			fd.append("fechaVigencia", selectedRowData.vigenciaLicencia);

			fd.append("idGenero", selectedRowData.idGenero);
			fd.append("fechaNacimiento", selectedRowData.fechaNacimiento);
			fd.append("fechaVigencia", selectedRowData.vigenciaLicencia);
			fd.append("calle", selectedRowData.calle);
			fd.append("numero", selectedRowData.numero);
			fd.append("colonia", selectedRowData.colonia);

			fd.append("idMunicipio", selectedRowData.PersonaDireccion.idMunicipio);
			fd.append("municipio", selectedRowData.PersonaDireccion.municipio);
			fd.append("codigoPostal", selectedRowData.PersonaDireccion.codigoPostal);
			fd.append("entidad", selectedRowData.PersonaDireccion.entidad);
			fd.append("telefono", selectedRowData.PersonaDireccion.telefono);
			fd.append("correo", selectedRowData.PersonaDireccion.correo);
           
            $.ajax({
                type: 'POST',
                 url: '/Personas/guardaDesdeServicio',
                  contentType: false, // Not to set any content header
                    processData: false, // Not to process data
                 data: fd,
                 success: function (result) {
                       $('#modalLicenciasList').modal('hide');
                     var grid = $("#gridPersonas").data("kendoGrid");
                     if (result && result.data) {
                         var dataArray = [result.data];
                         grid.dataSource.data(dataArray);
                     } else {
                         console.error("La respuesta no tiene la estructura esperada:", result);
                     }
                     sitteg_success('Elemento guardado correctamente')
                     hideLoading();
                 },
                 error: function (error) {
                     sitteg_warning('Error al guardar en la base de datos:');
                     hideLoading();
                 }
            });
        }

	function cambiaFecha() {
		var timepickerControl = $("#dateTime").data("kendoTimePicker");
		var varFechaInfraccion = kendo.toString(this.value(), 'd');
		var dia = varFechaInfraccion.slice(0, varFechaInfraccion.indexOf("/"));
		varFechaInfraccion = varFechaInfraccion.slice(varFechaInfraccion.indexOf("/") + 1, varFechaInfraccion.length);
		var mes = varFechaInfraccion.slice(0, varFechaInfraccion.indexOf("/"));
		varFechaInfraccion = varFechaInfraccion.slice(varFechaInfraccion.indexOf("/") + 1, varFechaInfraccion.length);
		let date = new Date();

		if (varFechaInfraccion == date.getFullYear() && mes == (date.getMonth() + 1) && dia == date.getDate()) {
			timepickerControl.max(date.getHours() + ":" + date.getMinutes());

			timepickerControl.bind("change", function (e) {
				var hora = timepickerControl.value();
				if (hora != null && hora.getHours() > date.getHours()) {
					if (hora.getMinutes() > date.getMinutes()) {
						timepickerControl.value("");
					}
				}
			});
		} else {
			timepickerControl.max("23:59");
		}
	}

</script>

