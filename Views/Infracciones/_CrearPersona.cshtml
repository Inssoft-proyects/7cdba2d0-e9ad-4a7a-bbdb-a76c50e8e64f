@model PersonaModel
<script>
    function EntidadDropDownChange() {
        var entidadDDlValue = $("#idEntidad").data("kendoDropDownList").value();


        $.ajax({
            url: "/Infracciones/Municipios_Drop",
            type: "POST",
            data: { entidadDDlValue: entidadDDlValue },
            success: function (data) {
                var MunicipiosDropDown = $("#idMunicipioFisico").data("kendoDropDownList");
                MunicipiosDropDown.dataSource.data(data);
            },
            error: function (xhr, status, error) {
            }
        });
    }
</script>
<form id="frmCrearPersona" class="row px-4 mb-4 align-items-end justify-content-center">
    @Html.HiddenFor(m=> m.idPersona)
    <div class="row my-2">
        <div class="col-md-4">
            <div class="controlForm">
                @(Html.Kendo().TextBoxFor(t => t.nombre)
                    .Label(l => l.Content("Nombre <b>(obligatorio)</b>:"))
                    .HtmlAttributes(new { style = "width: 100%; height:58px;", required = "required" })
                    )
            </div>
        </div>
        <div class="col-md-4">
            <div class="controlForm">
                @(Html.Kendo().TextBoxFor(t => t.apellidoPaterno)
                    .Label(l => l.Content("Apellido paterno <b>(obligatorio)</b>:"))
                    .HtmlAttributes(new { style = "width: 100%; height:58px;", required = "required" })
                    )
            </div>
        </div>
        <div class="col-md-4">
            <div class="controlForm">
                @(Html.Kendo().TextBoxFor(t => t.apellidoMaterno)
                    .Label(l => l.Content("Apellido materno <b>(obligatorio)</b>:"))
                    .HtmlAttributes(new { style = "width: 100%; height:58px;", required = "required" })
                    )
            </div>
        </div>

    </div>
    <div class="row my-2">
        <div class="col-md-4">
            <div class="controlForm">
                <label>Fecha de nacimiento <b>(obligatorio):</b></label>
                @(Html.Kendo().DatePickerFor(t => t.fechaNacimiento)
                    .Culture("es-ES")
                    .HtmlAttributes(new { style = "width: 100%;", required = "required" })
                    )
            </div>
        </div>
        <div class="col-md-4">
            <div class="controlForm">
                @(Html.Kendo().TextBoxFor(t => t.CURP)
                    .Label(l => l.Content("CURP <b>(obligatorio)</b>:"))
                    .HtmlAttributes(new { style = "width: 100%; height:58px;", required = "required" })
                    )
            </div>
        </div>
        <div class="col-md-4">
            <div class="controlForm">
                @(Html.Kendo().TextBoxFor(t => t.RFC)
                    .Label(l => l.Content("RFC:"))
                    .HtmlAttributes(new { style = "width: 100%; height:58px;" })
                    )
            </div>
        </div>
    </div>
    <div class="row my-2">
        <div class="col-md-6">
            <div class="controlForm">
                <label>Género:</label>
                @(Html.Kendo().DropDownListFor(m => m.idGenero).Filter(FilterType.Contains)
                    .BindTo((SelectList)ViewBag.CatGeneros)
                    .OptionLabel("-- Seleccione --")
                    .Filter(FilterType.Contains)
                    .Label(l => l.Content("Género <b>(obligatorio)</b>:"))
                    .HtmlAttributes(new { style = "width:100%;", required = "required" }))
            </div>
        </div>
        <div class="col-md-6">
            <div class="controlForm">
                <label>Tipo persona:</label>
                @(Html.Kendo().DropDownListFor(m => m.idCatTipoPersona).Filter(FilterType.Contains)
                    .BindTo((SelectList)ViewBag.CatTipoPersona)
                    .OptionLabel("-- Seleccione --")
                    .Label(l => l.Content("Tipo persona <b>(obligatorio)</b>:"))
                    .HtmlAttributes(new { style = "width:100%;", required = "required" }))
            </div>
        </div>
    </div>
    <div class="row my-2">
        <div class="col-md-4">
            <div class="controlForm">
                @(Html.Kendo().TextBoxFor(t => t.numeroLicenciaFisico)
                    .Label(l => l.Content("Número licencia:"))
                    .HtmlAttributes(new { style = "width: 100%; height:58px;" })
                    )
            </div>
        </div>
        <div class="col-md-4">
            <div class="controlForm">
                <label>Tipo licencia:</label>
                @(Html.Kendo().DropDownListFor(m => m.idTipoLicenciaInfraccion).Filter(FilterType.Contains)
                    .BindTo((SelectList)ViewBag.CatTipoLicencia)
                    .OptionLabel("-- Seleccione --")
                    .HtmlAttributes(new { style = "width:100%;" }))
            </div>
        </div>
        <div class="col-md-4">
            <div class="controlForm">
                <label>Vigencia licencia:</label>
                @(Html.Kendo().DatePickerFor(t => t.vigenciaLicenciaFisico)
              .Culture("es-ES")
                    .HtmlAttributes(new { style = "width: 100%;" })
                    )
            </div>
        </div>
    </div>
    <div class="row my-2">
        <div class="col-md-4">
            <div class="controlForm">
                <label>Entidad:</label>
                @(Html.Kendo().DropDownListFor(m => m.PersonaDireccion.idEntidad).Filter(FilterType.Contains)
                    .DataTextField("Text")
                    .DataValueField("Value")
                    .OptionLabel("Selecciona una opción")
                    .Events(e => e.Change("EntidadDropDownChange"))
                    .DataSource(source =>
                    {
                        source.Read(read =>
                        {
                            read.Action("Entidades_Drop", "Infracciones");
                        });
                    })
                    .HtmlAttributes(new { style = "width:100%;", id = "idEntidad" })
                    )
            </div>
        </div>
        <div class="col-md-4">
            <div class="controlForm">
                <label>Municipio:</label>
                @(Html.Kendo().DropDownListFor(m => m.PersonaDireccion.idMunicipio).Filter(FilterType.Contains)
                    .DataTextField("Text")
                    .DataValueField("Value")
                    .OptionLabel("Selecciona un Municipio")
                    .DataSource(source =>
                    {
                        source.Read(read =>
                        {
                            read.Action("Municipios_Drop", "Infracciones");
                        });
                    })
                    .HtmlAttributes(new { style = "width:100%;", id = "idMunicipioFisico" }))
                @*.HtmlAttributes(new { style = "width:100%;", id = "idMunicipio" }))*@
            </div>
        </div>
        <div class="col-md-4">
            <div class="controlForm">
                @(Html.Kendo().TextBoxFor(t => t.PersonaDireccion.codigoPostal)
                    .Label(l => l.Content("Código postal <b>(obligatorio)</b>:"))
                    .HtmlAttributes(new { style = "width: 100%; height:58px;", required = "required" })
                    )
            </div>
        </div>
    </div>
    <div class="row my-2">
        <div class="col-md-4">
            <div class="controlForm">
                @(Html.Kendo().TextBoxFor(t => t.PersonaDireccion.colonia)
                    .Label(l => l.Content("Colonia <b>(obligatorio)</b>:"))
                    .HtmlAttributes(new { style = "width: 100%; height:58px;", required = "required" })
                    )
            </div>
        </div>
        <div class="col-md-4">
            <div class="controlForm">
                @(Html.Kendo().TextBoxFor(t => t.PersonaDireccion.calle)
                    .Label(l => l.Content("Calle <b>(obligatorio)</b>:"))
                    .HtmlAttributes(new { style = "width: 100%; height:58px;", required = "required" })
                    )
            </div>
        </div>
        <div class="col-md-4">
            <div class="controlForm">
                @(Html.Kendo().TextBoxFor(t => t.PersonaDireccion.numero)
                    .Label(l => l.Content("Número <b>(obligatorio)</b>:"))
                    .HtmlAttributes(new { style = "width: 100%; height:58px;", required = "required" })
                    )
            </div>
        </div>
    </div>
    <div class="row my-2">
        <div class="col-md-6">
            <div class="controlForm">
                @(Html.Kendo().TextBoxFor(t => t.telefonoInfraccion)
                    .Label(l => l.Content("Teléfono:"))
                    .HtmlAttributes(new { style = "width: 100%; height:58px;" })
                    )
            </div>
        </div>
        <div class="col-md-6">
            <div class="controlForm">
                @(Html.Kendo().TextBoxFor(t => t.correoInfraccion)
                    .Label(l => l.Content("Correo <b>(obligatorio)</b>:"))
                    .HtmlAttributes(new { style = "width: 100%; height:58px;", required = "required" })
                    )
            </div>
        </div>
    </div>
</form>
<div class="row my-4">
    <div class="col-12 col-md-6 mx-md-auto">
        <div class="row justify-content-around">

            <div class="col-auto btnOutline my-2 mx-auto mx-xl-2 p-0">
                <button type="button" data-bs-dismiss="modal" aria-label="Close">
                    <h6 class="m-0 px-3"><b>Cerrar</b></h6>
                </button>
            </div>
            <div class="col-auto btnOutline btnOutlinePrimary my-2 mx-auto mx-xl-2 p-0">
                <div class="controlButton">
                    <button class="btnPrimary px-3" onclick="btnCrearPersona()" id="btnSave">
                        <h5 class="m-0"><b>Guardar</b></h5>
                    </button>
                </div>
            </div>
        </div>
    </div>

</div>

<script>
    var isValidPhone = function (phone) {
        var regex = /^[0-9]+$/;
        return regex.test(phone);
    };

    var isValidEmail = function (email) {
        var regex = /^\w+([.-_+]?\w+)*\w+([.-]?\w+)*(\.\w{2,10})+$/;
        return regex.test(email);
    };

    function isControlsValid(controlsValidate) {
        var isValid = true;
        var isFirst = false;

        controlsValidate.forEach(x => {
            var element = $('#' + x.controlName);
            element.removeClass("errorData");
            if (element.val() == '') {
                element.addClass("errorData");
                if (!isFirst) {
                    //element.focus();
                }
                isValid = false;
                isFirst = true;
            }

        });

        return isValid;
    }


    function completarConLicencia() {
        var formData = $("#frmCrearPersona").serialize();

        // Parsear el formData utilizando URLSearchParams
        var searchParams = new URLSearchParams(formData);

        // Obtener el valor de "numeroLicencia" del formData
        var numeroLicencia = searchParams.get('numeroLicencia');

        // Validar si el TextBox contiene información
        if (numeroLicencia.trim() !== "") {
            // Enviar el valor al controlador mediante AJAX
            $.ajax({
                type: "POST",
                url: "/Personas/BusquedaPorLicencia",
                data: { numeroLicencia: numeroLicencia },
                success: function (result) {
                    // Manejar la respuesta del controlador si es necesario
                    console.log(result);
                },
                error: function (error) {
                    // Manejar errores en la solicitud AJAX
                    console.error(error);
                }
            });
        } else {
            // Mostrar un mensaje de error o realizar acciones cuando el TextBox está vacío
            alert("El número de licencia es obligatorio.");
        }
    }


    function btnCrearPersona() {
        var controlsValidate = [];
        var isValid = true;
        var phone = $("#telefonoInfraccion").val();
        var email = $("#correoInfraccion").val();

        var validator = $("#frmCrearPersona").kendoValidator().data('kendoValidator');
        $("#vigenciaLicenciaFisico").prop("disabled", true);
        $("#idTipoLicencia").prop("disabled", true);
        $("#numeroLicencia").prop("disabled", true);

        $('#telefonoInfraccion').removeClass("errorData");
        if (phone != "" && phone != undefined) {
            if (!isValidPhone(phone)) {
                $('#telefonoInfraccion').addClass("errorData");
                isValid = false;
            }
        }

        if (email != "" && email != undefined) {
            $('#correoInfraccion').removeClass("errorData");
            if (!isValidEmail(email)) {
                $('#correoInfraccion').addClass("errorData");
                isValid = false;
            }
        }
        if (!isValid) {
            sitteg_warning('Datos incorrectos, favor de verificar.');
            return;
        }

        validator.validate();
        if (validator.validate()) {
            $('#loading').css('display', 'block');
            $("#btnSave").prop("disabled", true);

            var formData = $("#frmCrearPersona").serialize();
            $.ajax({
                url: '@Url.Action("ajax_CrearPersona","Infracciones")',
                type: 'POST',
                data: formData,
                success: function (result) {
                    if (result.success === false) {
                        sitteg_warning(result.message);
                        $("#btnSave").prop("disabled", false);
                    }
                    else {
                        $("#listadoPersonas").html(result);
                        $('#modalCrearPersona').modal('hide');
                        $('#agregarConductorModal').modal('hide');
                        sitteg_success('Elemento guardado correctamente')
                    }
                    $('#loading').css('display', 'none');
                },
                error: function (xhr, status) {
                    var errmsg = xhr.responseText;
                    console.log(errmsg)
                    sitteg_warning('Lo sentimos, ha ocurrido un error.');
                    $("#btnSave").prop("disabled", false);
                    $('#loading').css('display', 'none');
                }
            });
        }
        else {
            $("#vigenciaLicenciaFisico").prop("disabled", false);
            $("#idTipoLicencia").prop("disabled", true);
            $("#numeroLicencia").prop("disabled", true);
            sitteg_info('Debe llenar los campos requeridos');
            return;
        }
    }

    $(document).ready(function () {
        var datePicker = $("#vigenciaLicenciaFisico").data("kendoDatePicker");
        datePicker.value(null);
    });

    $(document).ready(function () {
        var datePicker = $("#fechaNacimiento").data("kendoDatePicker");
        datePicker.value(null);
    });


    $(document).ready(function () {
        $('#vigenciaLicenciaFisico').removeAttr("required");
    });
</script>
